<h1><%= @sku.name %></h1>
Total Weight: <%= @sku.weight %> lbs<br>
Current FBA Inventory: <%= amz_inventory= @sku.inventory("Amazon US") %><br>
<% y = @sku.amazon_sales_count("Amazon US")["y"] %><% d2 = @sku.amazon_sales_count("Amazon US")["dates"] %>
<% x = [] %>
<% d2.each_with_index do |d,i| %>
	<% x[i]=((d-d2[0])/7).to_f %>
<% end %>
<% lineFit = LineFit.new %>
<% lineFit.setData(x,y) %>
<% if x.length > 1 %>
	<% b, m = lineFit.coefficients %>
<% else %>
	<% b = 0 %>
	<% m = 0 %>
<% end %>
<% startY = x[0]*m+b %>
<% leadTime = 120 %>
<% leadTimeWeeks = (leadTime/7.0).ceil %>
<% endY = (x.last*m)+b %>
<% preY = (x.last+leadTimeWeeks)*m+b %>
<% prediction_x = ((x.last.round(0))..(x.last.round(0)+leadTimeWeeks)).to_a %>
<% prediction_y = prediction_x.map { |x| x*m+b } %>
<% sigma = lineFit.sigma %>
<div id="orders_chart"></div>
<script type="text/javascript" charset="utf-8">
  $(function () {
    new Highcharts.Chart({
     	chart: { renderTo: 'orders_chart' },
		  title: { text: 'Orders by week' },
		  xAxis: { 
		  	type: 'datetime',
				maxZoom: 14 * 24 * 3600000,
		  	text: "Week Number",
		  	min: Date.UTC(<%= d2.first.year %>,<%= d2.first.month-1 %>,<%= d2.first.day %>),
		  	max: Date.UTC(<%= (d2.last+leadTime).year %>,<%= (d2.last+leadTime).month-1 %>,<%= (d2.last+leadTime).day %>),
		  },
		  yAxis: {
		  	min: 0,
		    title: { text: 'Orders'}
		  },
		  series: [{
				name: 'Weekly Sales',
		    data: [ <% (0..(d2.length-1)).each do |n| %>
		    	[Date.UTC(<%= d2[n].year %>, <%= d2[n].month-1 %>, <%= d2[n].day %>), <%= y[n] %> ]<%= "," if n != (d2.length-1) %>
		    <% end %>
		    ]
		  },{
				type: 'line',
				name: 'Regression Line',
				data: [
					[Date.UTC(<%= d2.first.year %>, <%= d2.first.month-1 %>, <%= d2.first.day %>),<%= startY %>],
					[Date.UTC(<%= d2.last.year %>, <%= d2.last.month-1 %>, <%= d2.last.day %>),<%= endY %>]
				],
				marker: {
					enabled: false
				},
				states: {
					hover: {
						lineWidth: 0
					}
				},
				enableMouseTracking: false
			},{
				type: 'line',
				name: 'Plus Sigma',
				data: [
					[Date.UTC(<%= d2.first.year %>, <%= d2.first.month-1 %>, <%= d2.first.day %>),<%= startY+sigma %>],
					[Date.UTC(<%= (d2.last+leadTime).year %>, <%= (d2.last+leadTime).month-1 %>, <%= (d2.last+leadTime).day %>),<%= prediction_y.last+sigma %>]
				],
				marker: {
					enabled: false
				},
				states: {
					hover: {
						lineWidth: 0
					}
				},
				enableMouseTracking: false,
				dashStyle: 'Dash'
			},{
				type: 'line',
				name: 'Minus Sigma',
				data: [
					[Date.UTC(<%= d2.first.year %>, <%= d2.first.month-1 %>, <%= d2.first.day %>),<%= startY-sigma %>],
					[Date.UTC(<%= (d2.last+leadTime).year %>, <%= (d2.last+leadTime).month-1 %>, <%= (d2.last+leadTime).day %>),<%= prediction_y.last-sigma %>]
				],
				marker: {
					enabled: false
				},
				states: {
					hover: {
						lineWidth: 0
					}
				},
				enableMouseTracking: false,
				dashStyle: 'Dash'
			},{
				type: 'line',
				name: 'Prediction Line',
				data: [
					[Date.UTC(<%= d2.last.year %>, <%= d2.last.month-1 %>, <%= d2.last.day %>),<%= prediction_y.first %>],
					[Date.UTC(<%= (d2.last+leadTime).year %>, <%= (d2.last+leadTime).month-1 %>, <%= (d2.last+leadTime).day %>),<%= prediction_y.last %>]
					],
				marker: {
					enabled: false
				},
				dashStyle: 'Dash'
			}]
    });
  });
</script>
<% [28,90].each do |leadTime| %>
<h3><a href="#", style="color:#999">Assuming a <%= leadTime %> day lead time</a></h3>
<blockquote>
<% leadTimeWeeks = (leadTime/7.0).ceil %>
Current Inventory: <%= ci = amz_inventory %><br>
Sum of Orders Currently in the Pipeline: <% pl = @sku.get_orders("Amazon US",leadTime) %><%= pl. round %><br>
Slope of the Demand Line: <%= m.round %><br>
Intercept of the Demand Line: <%= b.round %><br>
StDev of the Orders: <% sigma=lineFit.sigma %><%= sigma.round %><br>
StDev of the Demand for <%= leadTimeWeeks %> weeks: <% sdd=lineFit.sigma * Math.sqrt(leadTimeWeeks) %><%= sdd.round %><br>
Service level of 99% requires safety stock to be 2 sigma, so the safety stock level is: <% ss=sdd*2 %><%= ss.round %><br>
Predicted Demand:
<% weeks = (0..leadTimeWeeks).map { |w| w+y.length } %>
<% predictedDemand = weeks.map { |x1| m*x1+b } %>
<% pd= predictedDemand.sum - predictedDemand[0] %>
<%= pd.round %><br>
Need (Safety stock + Predicted Demand - (Current Inventory + Pipeline Orders))= <%= ss.round %> + <%= pd.round %> - (<%= ci.round %> + <%= pl.round %>) = <% need = (ss + pd - (ci+pl)) %><%= need.round %>peices <br>
</blockquote>
<% end %>
