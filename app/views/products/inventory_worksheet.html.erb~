<% if @title == "Inventory Worksheet" %>
<%= (link_to "Print", inventory_worksheet_print_products_path, target: "_blank", onclick: "return !window.open(this.href, 'Print', 'width=500,height=500')") %>
<script>
$('#data-popup').onclick('click', function(e) { 
	window.open(this.href,'create_company', 'height=600, width=600');
	return false;
});
</script>
<% else %>
<link href="/assets/custom.css?body=1" media="all" rel="stylesheet" type="text/css" />
<script type="text/javascript">
 window.onload = function() { window.print(); }
</script>
<% end %>
<table class="table">
<tr>
	<td>Product</td>
	<td>Last Inventory Date</td>
	<td>Last Inventory Amount (peices)</td>
	<td>Estimated Sales Since Inventory (peices)</td>
	<td>Amount Recieved Since Inventory	(peices)</td>
	<td>New Estimated Inventory (peices)</td>
</tr>
<% @products.each do |product| %>
<tr>
	<td><%= product.name %></td>
	<td><%= updated = (product.get_last_count("Inventory").class != Fixnum ? product.get_last_count("Inventory").updated_at : DateTime.new(2009)).to_date %></td>
	<td><%= count = ((product.get_last_count("Inventory").class != Fixnum ? product.get_last_count("Inventory").count : 0 ) * (product.get_last_count("Inventory").class != Fixnum ? (product.get_last_count("Inventory").is_box ? product.per_box : 1) : 0 )).round(0) %></td>
	<% sql = ActiveRecord::Base.connection() %>
	<% if Rails.env.production? %>
		<% d=sql.execute("SELECT SUM(orders.quantity * offering_products.quantity) as purchases FROM orders INNER JOIN offerings ON offerings.id = orders.offering_id INNER JOIN offering_products ON offering_products.offering_id = offerings.id INNER JOIN products ON products.id = offering_products.product_id WHERE (products.id = #{product.id}) AND orders.date >= '#{updated}'::date") %>
	<% else %>
		<% d=sql.execute("SELECT SUM(orders.quantity * offering_products.quantity) as purchases FROM orders INNER JOIN offerings ON offerings.id = orders.offering_id INNER JOIN offering_products ON offering_products.offering_id = offerings.id INNER JOIN products ON products.id = offering_products.product_id WHERE (products.id = #{product.id}) AND orders.date >= '#{updated}'") %>
	<% end %>
	<td><%= sales=purchases=d[0]["purchases"].to_i %></td>
	<td>
	<% received=0 %>
	<% product.events.where("received = ? AND received_date >= ?",'t',updated).each do |e| %>
		c=e.product_counts.find_by_product_id(product)
		received = received + c.count * (c.is_box ? product.per_box : 1)
	<% end %>
	<%= received %>
	</td>
	<td><%= count + received - sales %></td>
</tr>
<% end %>
</table>
