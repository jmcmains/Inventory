<%= form_tag inventory_worksheet_products_path, method: :get, class: "form-search form-inline" do  %>
<table class="table" id="main" style="padding-top:0;margin-top:0">
<thead>
<tr>
	<th style="text-align:center">Product</th>
	<th style="text-align:center">Start Date: <%= select_tag :start_date_id, options_for_select(Event.inventory.sort_by(&:date).collect {|a| [a.date, a.id]}, @start_date.id), class: "input-medium" %><br>Recorded Inventory</th>
	<th style="text-align:center">End Date: <%= select_tag :end_date_id, options_for_select(Event.inventory.sort_by(&:date).collect {|a| [a.date, a.id]}, @end_date.id),class: "input-medium" %><br>Recorded Inventory</th>
	<th style="text-align:center">Estimated Sales During</th>
	<th style="text-align:center">Product Received During</th>
	<th style="text-align:center">End Date Estimated Inventory (peices)</th>
	<th style="text-align:center">Difference<br>(meas-est)</th>
	<th style="text-align:center">Error</th>
</tr>
</thead>
<tbody>
<tr>
<td></td>
<td colspan="2" style="text-align:center"><%= submit_tag %></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<% end %>
<% @products.each do |product| %>
	<% if product.display? %>
	<tr>
		<td><%= product.name %></td>
		<td style="text-align:center"><%= start_count = @start_date.product_counts.find_by(product_id: product.id).blank? ? 0 : @start_date.product_counts.find_by(product_id: product.id).count.round %></td>
		<td style="text-align:center"><%= end_count = @end_date.product_counts.find_by(product_id: product.id).blank? ? 0 : @end_date.product_counts.find_by(product_id: product.id).count.round %></td>
		<% sql = ActiveRecord::Base.connection() %>
			<% d=sql.execute("SELECT SUM(orders.quantity * offering_products.quantity) as purchases FROM orders INNER JOIN offerings ON offerings.id = orders.offering_id INNER JOIN offering_products ON offering_products.offering_id = offerings.id INNER JOIN products ON products.id = offering_products.product_id WHERE (products.id = #{product.id}) AND orders.date >= '#{@start_date.date}'::date AND orders.date <= '#{@end_date.date}'::date") %>
		<td style="text-align:center"><%= sales=purchases=d[0]["purchases"].to_i %></td>
		<td style="text-align:center">
		<% received=0 %>
		<% product.events.where("received = ? AND received_date >= ? AND received_date <= ?",'t',@start_date.date,@end_date.date).each do |e| %>
			<% c=e.product_counts.find_by_product_id(product) %>
			<% received = received + c.count * (c.is_box ? product.per_box : 1) %>
		<% end %>
		<%= received %>
		</td>
		<td style="text-align:center"><%= est = start_count + received - sales %></td>
		<td style="text-align:center"><%= dif = (end_count - est) %></td>
		<% error = (2*dif.to_f/(end_count + est) * 100).round(2) %>
		<% if error > 10 || error < -10 %>
		<td style="text-align:center;color:red">
		<% else %>
		<td style="text-align:center;color:green">
		<% end %>
		<%= error %>%
		</td>
	</tr>
	<% end %>
<% end %>
</tbody>
</table>


